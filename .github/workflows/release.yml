name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build - ${{ matrix.target }}
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.tar.gz hemmer-provider-generator
          shasum -a 256 hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.tar.gz > hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.tar.gz.sha256

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.zip hemmer-provider-generator.exe
          certutil -hashfile hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.zip SHA256 > hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.zip.sha256

      - name: Upload Release Asset (Unix)
        if: matrix.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.tar.gz
          asset_name: hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Checksum (Unix)
        if: matrix.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.tar.gz.sha256
          asset_name: hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.tar.gz.sha256
          asset_content_type: text/plain

      - name: Upload Release Asset (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.zip
          asset_name: hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.zip
          asset_content_type: application/zip

      - name: Upload Checksum (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.zip.sha256
          asset_name: hemmer-provider-generator-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.zip.sha256
          asset_content_type: text/plain
